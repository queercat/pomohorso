<div class="h-full flex flex-col justify-center items-center rounded dark:bg-slate-900 font-bold gap-4 drop-shadow-lg">
	<p class="text-4xl md:text-3xl lg:text-6xl">Pomo<span class="text-pink-400">horso</span></p>
	<p id="timerText" class="text-5xl lg:text-8xl">24:<span class="text-pink-400">59</span></p>
	<button id="horse" type="button" class="text-white bg-pink-400 hover:bg-pink-500 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-full text-sm p-2 lg:p-4 text-center inline-flex items-center">
		üê¥
	</button>
	<span class="sr-only">Start & Stop Timer</span>
</div>

<script>
	const horse = document.querySelector('#horse') as HTMLButtonElement;
	const timerText = document.querySelector('#timerText') as HTMLParagraphElement;

	const getMinutes = (time: number) => Math.floor(time / 60);
	const getSeconds = (time: number) => time % 60;
	const formatSeconds = (seconds: number) => seconds < 10 ? `0${seconds}` : seconds;
	const formatTime = (time: number) => `${getMinutes(time)}:${formatSeconds(getSeconds(time))}`;

	// Try and fetch the timer from local storage.
	let time = Number(localStorage.getItem('time'));

	let isTicking = false;
	let isBreak = false;

	if (!time) {
		localStorage.setItem('time', '1500');
	}

	// Set the timer to the value in local storage.
	time = Number(localStorage.getItem('time'));

	timerText.innerText = formatTime(time);

	const interval = setInterval(() => {
		if (time > 0 && isTicking) {
			time--;
			timerText.innerText = formatTime(time);
			localStorage.setItem('time', String(time));
		}

		if (!isBreak && time <= 0) {
			// Set timer to 5 minutes.
			time = 300;
			isBreak = true;
		}

		if (isBreak && time <= 0) {
			// Set timer to 25 minutes.
			time = 1500;
			isBreak = false;
		}

		// Update title.
		document.title = `${formatTime(time)} - Pomohorso`;
	}, 1000);

	horse.addEventListener('click', () => {
		isTicking = !isTicking;
	});


</script>